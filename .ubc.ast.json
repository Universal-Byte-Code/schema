{
  "$schema": "https://json-schema.org/draft/2020-12/schema#",
  "title": "Extended Ubytec Schema",
  "type": "object",
  "properties": {
    "RootSentence": {
      "$ref": "#/definitions/SyntaxSentence"
    },
    "Metadata": {
      "$ref": "#/definitions/RootMetadata"
    }
  },
  "required": [
    "RootSentence",
    "Metadata"
  ],
  "definitions": {
    "RootMetadata": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string"
        },
        "encoding": {
          "type": "string"
        },
        "langver": {
          "type": "string"
        }
      },
      "required": [
        "guid",
        "encoding",
        "langver"
      ]
    },
    "SyntaxSentence": {
      "type": "object",
      "properties": {
        "Nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyntaxNode"
          }
        },
        "Sentences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyntaxSentence"
          }
        },
        "Metadata": {
          "$ref": "#/definitions/SentenceMetadata"
        }
      },
      "required": [
        "Nodes",
        "Sentences",
        "Metadata"
      ]
    },
    "SentenceMetadata": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "guid",
        "type"
      ]
    },
    "SyntaxNode": {
      "type": "object",
      "properties": {
        "Operation": {
          "$ref": "#/definitions/Operation"
        },
        "Children": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/SyntaxNode"
          }
        },
        "Tokens": {
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/SyntaxToken"
          }
        },
        "Metadata": {
          "$ref": "#/definitions/NodeMetadata"
        }
      },
      "required": [
        "Operation",
        "Tokens",
        "Metadata"
      ]
    },
    "NodeMetadata": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string"
        },
        "nasm": {
          "type": "string"
        }
      },
      "required": [
        "guid"
      ]
    },
    "SyntaxToken": {
      "type": "object",
      "properties": {
        "Source": {
          "type": "string"
        },
        "Line": {
          "type": "integer"
        },
        "StartColumn": {
          "type": "integer"
        },
        "EndColumn": {
          "type": "integer"
        },
        "Scopes": {
          "type": [
            "array"
          ],
          "items": {
            "type": "string",
            "enum": [
              "comment.block.ubytec",
              "comment.line.double-slash.ubytec",
              "constant.boolean.ubytec",
              "constant.numeric.binary.ubytec",
              "constant.numeric.double.ubytec",
              "constant.numeric.float.ubytec",
              "constant.numeric.hex.ubytec",
              "constant.numeric.int.ubytec",
              "entity.name.argument.ubytec",
              "entity.name.field.ubytec",
              "entity.name.type.action.ubytec",
              "entity.name.type.class.ubytec",
              "entity.name.type.enum.ubytec",
              "entity.name.type.func.ubytec",
              "entity.name.type.interface.ubytec",
              "entity.name.type.record.ubytec",
              "entity.name.type.struct.ubytec",
              "entity.name.var.explicit.ubytec",
              "entity.name.var.implicit.ubytec",
              "invalid.illegal.ubytec",
              "keyword.audio.ubytec",
              "keyword.control.declaration.ubytec",
              "keyword.control.flow.ubytec",
              "keyword.control.jump.ubytec",
              "keyword.control.ubytec",
              "keyword.exception.ubytec",
              "keyword.function.call.ubytec",
              "keyword.memory.ubytec",
              "keyword.ml.ubytec",
              "keyword.operator.arithmetic.ubytec",
              "keyword.operator.bitwise.ubytec",
              "keyword.operator.comparison.ubytec",
              "keyword.power.ubytec",
              "keyword.quantum.ubytec",
              "keyword.security.ubytec",
              "keyword.stack.ubytec",
              "keyword.storage.var.ubytec",
              "keyword.syscall.ubytec",
              "keyword.system.ubytec",
              "keyword.threading.ubytec",
              "keyword.vector.ubytec",
              "meta.angle.grouping.ubytec",
              "meta.array.ubytec",
              "meta.block.ubytec",
              "meta.grouping.ubytec",
              "operator.addition.ubytec",
              "operator.assign.ubytec",
              "operator.bitwise-and.ubytec",
              "operator.decrement.ubytec",
              "operator.division.ubytec",
              "operator.equality.ubytec",
              "operator.exponentiation.ubytec",
              "operator.greater-than-equals.ubytec",
              "operator.greater-than.ubytec",
              "operator.hash.ubytec",
              "operator.increment.ubytec",
              "operator.inequality.ubytec",
              "operator.left-shift.ubytec",
              "operator.less-than-equals.ubytec",
              "operator.less-than.ubytec",
              "operator.logical-and.ubytec",
              "operator.logical-or.ubytec",
              "operator.modulo.ubytec",
              "operator.multiplication.ubytec",
              "operator.negation.ubytec",
              "operator.nullable-coalescence.ubytec",
              "operator.optional-chaining.ubytec",
              "operator.pipe-in.ubytec",
              "operator.pipe-out.ubytec",
              "operator.pipe.ubytec",
              "operator.right-shift.ubytec",
              "operator.schematize.ubytec",
              "operator.spread.ubytec",
              "operator.subtraction.ubytec",
              "operator.unsigned-left-shift.ubytec",
              "operator.unsigned-right-shift.ubytec",
              "punctuation.arrow.ubytec",
              "punctuation.comma.ubytec",
              "punctuation.definition.comment.begin.ubytec",
              "punctuation.definition.comment.end.ubytec",
              "punctuation.scope.ubytec",
              "punctuation.section.angle.grouping.begin.ubytec",
              "punctuation.section.angle.grouping.end.ubytec",
              "punctuation.section.array.begin.ubytec",
              "punctuation.section.array.end.ubytec",
              "punctuation.section.block.begin.ubytec",
              "punctuation.section.block.end.ubytec",
              "punctuation.section.grouping.begin.ubytec",
              "punctuation.section.grouping.end.ubytec",
              "punctuation.semicolon.ubytec",
              "punctuation.separator.key-value.ubytec",
              "punctuation.separator.parent-child.ubytec",
              "source.ubytec",
              "storage.modifier.ubytec",
              "storage.type.array.nullable-array.ubytec",
              "storage.type.array.nullable-both.ubytec",
              "storage.type.array.nullable-items.ubytec",
              "storage.type.array.ubytec",
              "storage.type.single.nullable.ubytec",
              "storage.type.single.ubytec",
              "string.quoted.double.ubytec",
              "string.quoted.single.ubytec"
            ]
          }
        },
        "Metadata": {
          "$ref": "#/definitions/NodeMetadata"
        }
      },
      "required": [
        "Source",
        "Line",
        "StartColumn",
        "EndColumn",
        "Scopes",
        "Metadata"
      ]
    },
    "Operation": {
      "type": "object",
      "properties": {
        "$type": {
          "type": "string"
        },
        "OpCode": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 254
            },
            {
              "type": "object",
              "properties": {
                "OpCode": {
                  "const": 255
                },
                "ExtensionGroup": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255
                },
                "ExtendedOpCode": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255
                }
              },
              "required": [
                "OpCode",
                "ExtensionGroup",
                "ExtendedOpCode"
              ]
            }
          ]
        },
        "BlockType": {
          "type": [
            "integer",
            "null"
          ]
        },
        "Condition": {
          "$ref": "#/definitions/SyntaxExpression"
        },
        "LabelIDxs": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "integer"
          }
        },
        "Variables": {
          "$ref": "#/definitions/SyntaxExpression"
        }
      },
      "required": [
        "$type",
        "OpCode"
      ]
    },
    "SyntaxExpression": {
      "type": "object",
      "properties": {
        "Syntaxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressionFragment"
          }
        }
      },
      "required": [
        "Syntaxes"
      ]
    },
    "BaseExpressionFragment": {
      "type": "object",
      "properties": {
        "Tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyntaxToken"
          }
        }
      },
      "required": [
        "Tokens"
      ]
    },
    "ConditionExpressionFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseExpressionFragment"
        },
        {
          "type": "object",
          "properties": {
            "$type": {
              "const": "ConditionExpressionFragment"
            },
            "Left": {},
            "Operand": {
              "type": "string"
            },
            "Right": {}
          },
          "required": [
            "$type",
            "Left",
            "Operand",
            "Right"
          ]
        }
      ]
    },
    "VariableExpressionFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseExpressionFragment"
        },
        {
          "type": "object",
          "properties": {
            "$type": {
              "const": "VariableExpressionFragment"
            },
            "PrimitiveType": {
              "type": "integer"
            },
            "Nullable": {
              "type": "boolean"
            },
            "Name": {
              "type": "string"
            },
            "Value": {}
          },
          "required": [
            "$type",
            "PrimitiveType",
            "Nullable",
            "Name",
            "Value"
          ]
        }
      ]
    },
    "ExpressionFragment": {
      "oneOf": [
        {
          "$ref": "#/definitions/ConditionExpressionFragment"
        },
        {
          "$ref": "#/definitions/VariableExpressionFragment"
        }
      ],
      "discriminator": {
        "propertyName": "$type",
        "mapping": {
          "ConditionExpressionFragment": "#/definitions/ConditionExpressionFragment",
          "VariableExpressionFragment": "#/definitions/VariableExpressionFragment"
        }
      }
    }
  }
}